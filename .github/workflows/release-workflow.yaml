name: 'Manual: Start Release'

on:
  workflow_dispatch:

jobs:
  prepare-release:
    name: Prepare release
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.type.outputs.branch }}
      modules: ${{ steps.project.outputs.modules }}
      version: ${{ steps.vars.outputs.version }}
      pr_url: ${{ steps.pr.outputs.pr_url }}

    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/hotfix'

    steps:
      - name: Set release type
        id: type
        run: |
          if [ "$REF" == "refs/heads/main" ]
          then
              echo "::set-output name=branch::release"
          else
              echo "::set-output name=branch::hotfix"
          fi
        env:
          REF: ${{ github.ref }}

      - name: Delete current release branch
        uses: dawidd6/action-delete-branch@v3
        if: steps.type.outputs.branch == 'release'
        continue-on-error: true
        with:
          github_token: ${{github.token}}
          branches: release

      - name: Create new release branch
        uses: peterjgrainger/action-create-branch@v2.0.1
        if: steps.type.outputs.branch == 'release'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          branch: 'release'

      - name: Check out repository code
        uses: actions/checkout@v2
        with:
          ref: ${{ steps.type.outputs.branch }}
          fetch-depth: 0

      - name: Setup Java and Scala
        uses: olafurpg/setup-scala@v10

      - name: Cache sbt
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Bump Release
        if: steps.type.outputs.branch == 'release'
        shell: bash
        run: make bump-release-and-push

      - name: Bump Hotfix
        if: steps.type.outputs.branch == 'hotfix'
        shell: bash
        run: make bump-patch-and-push

      - name: Set variables
        id: vars
        run: echo ::set-output name=version::$(make version)

      - name: Set Project Modules for matrix
        id: project
        shell: bash
        run: echo ::set-output name=modules::$(make list-modules-json)

      - name: Find old PR
        uses: juliangruber/find-pull-request-action@v1
        id: find-pull-request
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ steps.type.outputs.branch }}

      - name: Close old PR
        if: ${{ steps.find-pull-request.outputs.number > 0 }}
        uses: peter-evans/close-pull@v1
        with:
          pull-request-number: ${{ steps.find-pull-request.outputs.number }}
          comment: Auto-closing pull request
          delete-branch: false

      - name: Create new PR
        id: pr
        uses: repo-sync/pull-request@v2
        with:
          source_branch: ${{ steps.type.outputs.branch }}
          destination_branch: main
          pr_title: "Release ${{ steps.vars.outputs.version }} to PROD"
          pr_body: ":gear: *Automated PR*\nWhen merged ${{ github.event.repository.name }} ${{ steps.vars.outputs.version }} ${{ steps.type.outputs.branch }} will be released to PROD\nClose PR to cancel"
          pr_reviewer: "${{ github.actor }}"
          pr_assignee: "${{ github.actor }}"
          pr_label: "auto-pr,release"
          pr_allow_empty: true
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Show Output
        shell: bash
        run: |
          echo "modules: ${{ steps.project.outputs.modules }}"
          echo "version: ${{ steps.vars.outputs.version }}"
          echo "pr_url: ${{ steps.pr.outputs.pr_url }}"

      - name: Slack on error
        uses: 8398a7/action-slack@v3
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          username: 'github actions'
          author_name: ''
          icon_emoji: ':github:'
          text: ":x: The workflow `${{ github.workflow }}` triggered by `${{ github.event_name }}` failed\n\n:arrow_right: <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|See Log>"
          status: ${{ job.status }}
          fields: repo,message,commit,workflow
        if: ${{ failure() }}

  build-deploy:
    name: Build & Deploy Release
    runs-on: ubuntu-latest
    needs: prepare-release
    strategy:
      matrix:
        modules: ${{fromJson(needs.prepare-release.outputs.modules)}}

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
        with:
          ref: ${{ needs.prepare-release.outputs.branch }}
          fetch-depth: 0

      - name: Setup Java and Scala
        uses: olafurpg/setup-scala@v10

      - name: Cache sbt
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Azure Container Registry Login
        shell: bash
        run: make acr-docker-push-login
        env:
          APP_SPN_PWD: ${{ secrets.APP_SPN_PWD }}
          APP_SPN: ${{ secrets.APP_SPN }}

      - name: Dockerize
        shell: bash
        env:
          MODULE: ${{ matrix.modules }}
        run: |
          make docker-build $MODULE

      - name: Publish Docker Image to Github Container Registry
        shell: bash
        env:
          MODULE: ${{ matrix.modules }}
          APP_SPN_PWD: ${{ secrets.APP_SPN_PWD }}
          APP_SPN: ${{ secrets.APP_SPN }}
        run: make docker-push-acr $MODULE

      - name: Upload helm config
        uses: actions/upload-artifact@v2
        with:
          name: helm-config-${{ matrix.modules }}
          path: |
            helm/Chart.yaml
            helm/values.yaml

      - name: Slack on error
        uses: 8398a7/action-slack@v3
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          username: 'github actions'
          author_name: ''
          icon_emoji: ':github:'
          text: ":x: The workflow `${{ github.workflow }} (${{ matrix.modules }})` triggered by `${{ github.event_name }}` failed\n\n:arrow_right: <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|See Log>"
          status: ${{ job.status }}
          fields: repo,message,commit,workflow
        if: ${{ failure() }}

  push-charts:
    name: Push Helm Charts
    runs-on: ubuntu-latest
    needs: [ prepare-release,build-deploy ]
    strategy:
      matrix:
        modules: ${{fromJson(needs.prepare-release.outputs.modules)}}
        environment: [ dev, staging ]

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
        with:
          ref: ${{ needs.prepare-release.outputs.branch }}
          fetch-depth: 0

      - name: Setup Java and Scala
        uses: olafurpg/setup-scala@v10

      - name: Cache sbt
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: SBT Resolve
        shell: bash
        run: make version

      - name: Download helm-config
        uses: actions/download-artifact@v2
        with:
          name: helm-config-${{ matrix.modules }}
          path: helm

      - name: Install Helm
        shell: bash
        run: make install-helm

      - name: Github Container Registry Helm Login
        shell: bash
        run: make acr-helm-push-login
        env:
          APP_SPN_PWD: ${{ secrets.APP_SPN_PWD }}
          APP_SPN: ${{ secrets.APP_SPN }}

      - name: Append Environmental Values to Chart Values
        shell: bash
        env:
          ENVIRONMENT: ${{ matrix.environment }}
        run: make helm-concat ${{ matrix.modules }}

      - name: Push Charts to Github Repo
        shell: bash
        env:
          ENVIRONMENT: ${{ matrix.environment }}
          APP_SPN_PWD: ${{ secrets.APP_SPN_PWD }}
          APP_SPN: ${{ secrets.APP_SPN }}
        run: make helm-push-acr ${{ matrix.modules }}

      - name: Slack on error
        uses: 8398a7/action-slack@v3
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          username: 'github actions'
          author_name: ''
          icon_emoji: ':github:'
          text: ":x: The workflow `${{ github.workflow }} (${{ matrix.modules }}, ${{ matrix.environment }})` triggered by `${{ github.event_name }}` failed\n\n:arrow_right: <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|See Log>"
          status: ${{ job.status }}
          fields: repo,message,commit,workflow
        if: ${{ failure() }}


  success:
    needs: [ prepare-release, build-deploy, push-charts ]
    name: Notify success
    runs-on: ubuntu-latest

    steps:
      - name: Deploy notification
        uses: 8398a7/action-slack@v3
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          username: 'github actions'
          author_name: ''
          icon_emoji: ':github:'
          status: ${{ job.status }}
          fields:
          text: ":rocket: ${{ github.event.repository.name }} *v${{ needs.prepare-release.outputs.version }}* deployed to *STAGING*\n\n:arrow_right: <${{ needs.prepare-release.outputs.pr_url}}|Release To PROD>"

